import React from 'react';
import { View, StyleSheet, ScrollView, Alert } from 'react-native';
import { colors, spacing } from '../../constants/theme';
import Container from '../../components/layout/Container';
import Header from '../../components/layout/Header';
import Card from '../../components/ui/Card';
import Text from '../../components/ui/Text';
import Button from '../../components/ui/Button';

const SettingsScreen: React.FC = () => {
  const handleNotificationSettings = () => {
    Alert.alert('Ch·ª©c nƒÉng', 'C√†i ƒë·∫∑t th√¥ng b√°o');
  };

  const handlePrivacySettings = () => {
    Alert.alert('Ch·ª©c nƒÉng', 'C√†i ƒë·∫∑t quy·ªÅn ri√™ng t∆∞');
  };

  const handleLanguageSettings = () => {
    Alert.alert('Ch·ª©c nƒÉng', 'C√†i ƒë·∫∑t ng√¥n ng·ªØ');
  };

  const handleThemeSettings = () => {
    Alert.alert('Ch·ª©c nƒÉng', 'C√†i ƒë·∫∑t giao di·ªán');
  };

  const handleAbout = () => {
    Alert.alert('V·ªÅ ·ª©ng d·ª•ng', 'WeTraver v1.0.0\n·ª®ng d·ª•ng du l·ªãch t·ªët nh·∫•t');
  };

  const settingsItems = [
    {
      id: 1,
      title: 'Th√¥ng b√°o',
      subtitle: 'Qu·∫£n l√Ω th√¥ng b√°o',
      icon: 'üîî',
      onPress: handleNotificationSettings,
    },
    {
      id: 2,
      title: 'Quy·ªÅn ri√™ng t∆∞',
      subtitle: 'C√†i ƒë·∫∑t b·∫£o m·∫≠t',
      icon: 'üîí',
      onPress: handlePrivacySettings,
    },
    {
      id: 3,
      title: 'Ng√¥n ng·ªØ',
      subtitle: 'Ti·∫øng Vi·ªát',
      icon: 'üåê',
      onPress: handleLanguageSettings,
    },
    {
      id: 4,
      title: 'Giao di·ªán',
      subtitle: 'Ch·∫ø ƒë·ªô s√°ng',
      icon: 'üé®',
      onPress: handleThemeSettings,
    },
    {
      id: 5,
      title: 'V·ªÅ ·ª©ng d·ª•ng',
      subtitle: 'Phi√™n b·∫£n 1.0.0',
      icon: '‚ÑπÔ∏è',
      onPress: handleAbout,
    },
  ];

  return (
    <Container>
      <Header title="C√†i ƒë·∫∑t" showBackButton />

      <ScrollView style={styles.content} showsVerticalScrollIndicator={false}>
        <View style={styles.section}>
          <Text variant="h4" color="gray.900" style={styles.sectionTitle}>
            C√†i ƒë·∫∑t chung
          </Text>

          {settingsItems.map((item) => (
            <Card
              key={item.id}
              style={styles.settingItem}
              onPress={item.onPress}
              variant="outlined"
            >
              <View style={styles.settingItemContent}>
                <Text style={styles.settingIcon}>{item.icon}</Text>
                <View style={styles.settingTextContainer}>
                  <Text variant="body1" color="gray.900">
                    {item.title}
                  </Text>
                  <Text variant="body2" color="gray.600">
                    {item.subtitle}
                  </Text>
                </View>
                <Text style={styles.settingArrow}>‚Ä∫</Text>
              </View>
            </Card>
          ))}
        </View>

        <View style={styles.section}>
          <Text variant="h4" color="gray.900" style={styles.sectionTitle}>
            H·ªó tr·ª£
          </Text>

          <Card
            style={styles.settingItem}
            onPress={() => Alert.alert('Ch·ª©c nƒÉng', 'Trung t√¢m tr·ª£ gi√∫p')}
            variant="outlined"
          >
            <View style={styles.settingItemContent}>
              <Text style={styles.settingIcon}>‚ùì</Text>
              <View style={styles.settingTextContainer}>
                <Text variant="body1" color="gray.900">
                  Trung t√¢m tr·ª£ gi√∫p
                </Text>
                <Text variant="body2" color="gray.600">
                  C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                </Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </View>
          </Card>

          <Card
            style={styles.settingItem}
            onPress={() => Alert.alert('Ch·ª©c nƒÉng', 'Li√™n h·ªá h·ªó tr·ª£')}
            variant="outlined"
          >
            <View style={styles.settingItemContent}>
              <Text style={styles.settingIcon}>üìû</Text>
              <View style={styles.settingTextContainer}>
                <Text variant="body1" color="gray.900">
                  Li√™n h·ªá h·ªó tr·ª£
                </Text>
                <Text variant="body2" color="gray.600">
                  G·ª≠i ph·∫£n h·ªìi
                </Text>
              </View>
              <Text style={styles.settingArrow}>‚Ä∫</Text>
            </View>
          </Card>
        </View>
      </ScrollView>
    </Container>
  );
};

const styles = StyleSheet.create({
  content: {
    flex: 1,
  },
  section: {
    marginTop: spacing.lg,
  },
  sectionTitle: {
    paddingHorizontal: spacing.md,
    marginBottom: spacing.md,
  },
  settingItem: {
    marginHorizontal: spacing.md,
    marginBottom: spacing.sm,
    paddingVertical: 0,
  },
  settingItemContent: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: spacing.md,
  },
  settingIcon: {
    fontSize: 20,
    marginRight: spacing.md,
  },
  settingTextContainer: {
    flex: 1,
  },
  settingArrow: {
    fontSize: 18,
    color: colors.gray[400],
  },
});

export default SettingsScreen;
